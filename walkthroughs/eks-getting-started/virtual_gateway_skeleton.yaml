clientToken: ''  # Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
meshName: '' # [REQUIRED] The name of the service mesh to create the virtual gateway in.
meshOwner: '' # The AWS IAM account ID of the service mesh owner.
spec: # [REQUIRED] The virtual gateway specification to apply.
  backendDefaults:  # A reference to an object that represents the defaults for backends.
    clientPolicy:  # A reference to an object that represents a client policy.
      tls:  # A reference to an object that represents a Transport Layer Security (TLS) client policy.
        certificate:  # A reference to an object that represents a virtual gateway's client's Transport Layer Security (TLS) certificate.
          file:  # An object that represents a local file certificate.
            certificateChain: ''  # [REQUIRED] The certificate chain for the certificate.
            privateKey: '' # [REQUIRED] The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
          sds: # A reference to an object that represents a virtual gateway's client's Secret Discovery Service certificate.
            secretName: ''  # [REQUIRED] A reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
        enforce: true # Whether the policy is enforced.
        ports: # One or more ports that the policy is enforced for.
        - 0
        validation: # [REQUIRED] A reference to an object that represents a Transport Layer Security (TLS) validation context.
          subjectAlternativeNames:  # A reference to an object that represents the SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.
            match:  # [REQUIRED] An object that represents the criteria for determining a SANs match.
              exact:  # [REQUIRED] The values sent must match the specified values exactly.
              - ''
          trust: # [REQUIRED] A reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.
            acm:  # A reference to an object that represents a Transport Layer Security (TLS) validation context trust for an Certificate Manager certificate.
              certificateAuthorityArns:  # [REQUIRED] One or more ACM Amazon Resource Name (ARN)s.
              - ''
            file: # An object that represents a Transport Layer Security (TLS) validation context trust for a local file.
              certificateChain: ''  # [REQUIRED] The certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.
            sds: # A reference to an object that represents a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
              secretName: ''  # [REQUIRED] A reference to an object that represents the name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
  listeners: # [REQUIRED] The listeners that the mesh endpoint is expected to receive inbound traffic from.
  - connectionPool:  # The connection pool information for the virtual gateway listener.
      grpc:  # An object that represents a type of connection pool.
        maxRequests: 0  # [REQUIRED] Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.
      http: # An object that represents a type of connection pool.
        maxConnections: 0  # [REQUIRED] Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster.
        maxPendingRequests: 0 # Number of overflowing requests after max_connections Envoy will queue to upstream cluster.
      http2: # An object that represents a type of connection pool.
        maxRequests: 0  # [REQUIRED] Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster.
    healthCheck: # The health check information for the listener.
      healthyThreshold: 0  # [REQUIRED] The number of consecutive successful health checks that must occur before declaring the listener healthy.
      intervalMillis: 0 # [REQUIRED] The time period in milliseconds between each health check execution.
      path: '' # The destination path for the health check request.
      port: 0 # The destination port for the health check request.
      protocol: http # [REQUIRED] The protocol for the health check request. Valid values are: http, http2, grpc.
      timeoutMillis: 0 # [REQUIRED] The amount of time to wait when receiving a response from the health check, in milliseconds.
      unhealthyThreshold: 0 # [REQUIRED] The number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
    portMapping: # [REQUIRED] The port mapping information for the listener.
      port: 0  # [REQUIRED] The port used for the port mapping.
      protocol: grpc # [REQUIRED] The protocol used for the port mapping. Valid values are: http, http2, grpc.
    tls: # A reference to an object that represents the Transport Layer Security (TLS) properties for the listener.
      certificate:  # [REQUIRED] An object that represents a Transport Layer Security (TLS) certificate.
        acm:  # A reference to an object that represents an Certificate Manager certificate.
          certificateArn: ''  # [REQUIRED] The Amazon Resource Name (ARN) for the certificate.
        file: # A reference to an object that represents a local file certificate.
          certificateChain: ''  # [REQUIRED] The certificate chain for the certificate.
          privateKey: '' # [REQUIRED] The private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
        sds: # A reference to an object that represents a virtual gateway's listener's Secret Discovery Service certificate.
          secretName: ''  # [REQUIRED] A reference to an object that represents the name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
      mode: DISABLED # [REQUIRED] Specify one of the following modes. Valid values are: STRICT, PERMISSIVE, DISABLED.
      validation: # A reference to an object that represents a virtual gateway's listener's Transport Layer Security (TLS) validation context.
        subjectAlternativeNames:  # A reference to an object that represents the SANs for a virtual gateway listener's Transport Layer Security (TLS) validation context.
          match:  # [REQUIRED] An object that represents the criteria for determining a SANs match.
            exact:  # [REQUIRED] The values sent must match the specified values exactly.
            - ''
        trust: # [REQUIRED] A reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.
          file:  # An object that represents a Transport Layer Security (TLS) validation context trust for a local file.
            certificateChain: ''  # [REQUIRED] The certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.
          sds: # A reference to an object that represents a virtual gateway's listener's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
            secretName: ''  # [REQUIRED] A reference to an object that represents the name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.
  logging: # An object that represents logging information.
    accessLog:  # The access log configuration.
      file:  # The file object to send virtual gateway access logs to.
        path: ''  # [REQUIRED] The file path to write access logs to.
tags: # Optional metadata that you can apply to the virtual gateway to assist with categorization and organization.
- key: ''  # [REQUIRED] One part of a key-value pair that make up a tag.
  value: '' # [REQUIRED] The optional part of a key-value pair that make up a tag.
virtualGatewayName: '' # [REQUIRED] The name to use for the virtual gateway.
