clientToken: ''  # Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
gatewayRouteName: '' # [REQUIRED] The name to use for the gateway route.
meshName: '' # [REQUIRED] The name of the service mesh to create the gateway route in.
meshOwner: '' # The AWS IAM account ID of the service mesh owner.
spec: # [REQUIRED] The gateway route specification to apply.
  grpcRoute:  # An object that represents the specification of a gRPC gateway route.
    action:  # [REQUIRED] An object that represents the action to take if a match is determined.
      rewrite:  # The gateway route action to rewrite.
        hostname:  # The host name of the gateway route to rewrite.
          defaultTargetHostname: ENABLED  # The default target host name to write to. Valid values are: ENABLED, DISABLED.
      target: # [REQUIRED] An object that represents the target that traffic is routed to when a request matches the gateway route.
        virtualService:  # [REQUIRED] An object that represents a virtual service gateway route target.
          virtualServiceName: ''  # [REQUIRED] The name of the virtual service that traffic is routed to.
    match: # [REQUIRED] An object that represents the criteria for determining a request match.
      hostname:  # The gateway route host name to be matched on.
        exact: ''  # The exact host name to match on.
        suffix: '' # The specified ending characters of the host name to match on.
      metadata: # The gateway route metadata to be matched on.
      - invert: true  # Specify True to match anything except the match criteria.
        match: # The criteria for determining a metadata match.
          exact: ''  # The exact method header to be matched on.
          prefix: '' # The specified beginning characters of the method header to be matched on.
          range: # An object that represents the range of values to match on.
            end: 0  # [REQUIRED] The end of the range.
            start: 0 # [REQUIRED] The start of the range.
          regex: '' # The regex used to match the method header.
          suffix: '' # The specified ending characters of the method header to match on.
        name: '' # [REQUIRED] A name for the gateway route metadata.
      serviceName: '' # The fully qualified domain name for the service to match from the request.
  http2Route: # An object that represents the specification of an HTTP/2 gateway route.
    action:  # [REQUIRED] An object that represents the action to take if a match is determined.
      rewrite:  # The gateway route action to rewrite.
        hostname:  # The host name to rewrite.
          defaultTargetHostname: DISABLED  # The default target host name to write to. Valid values are: ENABLED, DISABLED.
        path: # The path to rewrite.
          exact: ''  # The exact path to rewrite.
        prefix: # The specified beginning characters to rewrite.
          defaultPrefix: DISABLED  # The default prefix used to replace the incoming route prefix when rewritten. Valid values are: ENABLED, DISABLED.
          value: '' # The value used to replace the incoming route prefix when rewritten.
      target: # [REQUIRED] An object that represents the target that traffic is routed to when a request matches the gateway route.
        virtualService:  # [REQUIRED] An object that represents a virtual service gateway route target.
          virtualServiceName: ''  # [REQUIRED] The name of the virtual service that traffic is routed to.
    match: # [REQUIRED] An object that represents the criteria for determining a request match.
      headers:  # The client request headers to match on.
      - invert: true  # Specify True to match anything except the match criteria.
        match: # An object that represents the method and value to match with the header value sent in a request.
          exact: ''  # The value sent by the client must match the specified value exactly.
          prefix: '' # The value sent by the client must begin with the specified characters.
          range: # An object that represents the range of values to match on.
            end: 0  # [REQUIRED] The end of the range.
            start: 0 # [REQUIRED] The start of the range.
          regex: '' # The value sent by the client must include the specified characters.
          suffix: '' # The value sent by the client must end with the specified characters.
        name: '' # [REQUIRED] A name for the HTTP header in the gateway route that will be matched on.
      hostname: # The host name to match on.
        exact: ''  # The exact host name to match on.
        suffix: '' # The specified ending characters of the host name to match on.
      method: GET # The method to match on. Valid values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
      path: # The path to match on.
        exact: ''  # The exact path to match on.
        regex: '' # The regex used to match the path.
      prefix: '' # Specifies the path to match requests with.
      queryParameters: # The query parameter to match on.
      - match:  # The query parameter to match on.
          exact: ''  # The exact query parameter to match on.
        name: '' # [REQUIRED] A name for the query parameter that will be matched on.
  httpRoute: # An object that represents the specification of an HTTP gateway route.
    action:  # [REQUIRED] An object that represents the action to take if a match is determined.
      rewrite:  # The gateway route action to rewrite.
        hostname:  # The host name to rewrite.
          defaultTargetHostname: DISABLED  # The default target host name to write to. Valid values are: ENABLED, DISABLED.
        path: # The path to rewrite.
          exact: ''  # The exact path to rewrite.
        prefix: # The specified beginning characters to rewrite.
          defaultPrefix: ENABLED  # The default prefix used to replace the incoming route prefix when rewritten. Valid values are: ENABLED, DISABLED.
          value: '' # The value used to replace the incoming route prefix when rewritten.
      target: # [REQUIRED] An object that represents the target that traffic is routed to when a request matches the gateway route.
        virtualService:  # [REQUIRED] An object that represents a virtual service gateway route target.
          virtualServiceName: ''  # [REQUIRED] The name of the virtual service that traffic is routed to.
    match: # [REQUIRED] An object that represents the criteria for determining a request match.
      headers:  # The client request headers to match on.
      - invert: true  # Specify True to match anything except the match criteria.
        match: # An object that represents the method and value to match with the header value sent in a request.
          exact: ''  # The value sent by the client must match the specified value exactly.
          prefix: '' # The value sent by the client must begin with the specified characters.
          range: # An object that represents the range of values to match on.
            end: 0  # [REQUIRED] The end of the range.
            start: 0 # [REQUIRED] The start of the range.
          regex: '' # The value sent by the client must include the specified characters.
          suffix: '' # The value sent by the client must end with the specified characters.
        name: '' # [REQUIRED] A name for the HTTP header in the gateway route that will be matched on.
      hostname: # The host name to match on.
        exact: ''  # The exact host name to match on.
        suffix: '' # The specified ending characters of the host name to match on.
      method: DELETE # The method to match on. Valid values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
      path: # The path to match on.
        exact: ''  # The exact path to match on.
        regex: '' # The regex used to match the path.
      prefix: '' # Specifies the path to match requests with.
      queryParameters: # The query parameter to match on.
      - match:  # The query parameter to match on.
          exact: ''  # The exact query parameter to match on.
        name: '' # [REQUIRED] A name for the query parameter that will be matched on.
  priority: 0 # The ordering of the gateway routes spec.
tags: # Optional metadata that you can apply to the gateway route to assist with categorization and organization.
- key: ''  # [REQUIRED] One part of a key-value pair that make up a tag.
  value: '' # [REQUIRED] The optional part of a key-value pair that make up a tag.
virtualGatewayName: '' # [REQUIRED] The name of the virtual gateway to associate the gateway route with.
